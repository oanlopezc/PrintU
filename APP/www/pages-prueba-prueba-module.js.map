{"version":3,"sources":["webpack:///./src/app/pages/prueba/prueba.module.ts","webpack:///./src/app/pages/prueba/prueba.page.html","webpack:///./src/app/pages/prueba/prueba.page.scss","webpack:///./src/app/pages/prueba/prueba.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAWF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB7B,6gB;;;;;;;;;;;ACAA,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACAL;AACR;AAOlD;IAGE,oBACS,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF1B,cAAS,GAAC,wBAAwB,CAAC;IAGxC,CAAC;IAEH,6BAAQ,GAAR;IACA,CAAC;IACD,gCAAW,GAAX;QACA,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC7B,SAAS,CAAC,eAAK;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,4BAAO,GAAP;QACA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;aAC5B,SAAS,CAAC,cAAI;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEA,8BAAS,GAAT;QACC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,eAAK;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEA,4BAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;;;;;;;;;KAWC;IAGF,4BAAO,GAAP;QACC,IAAM,MAAM,GAAG;YACb,EAAE,EAAE,GAAG;YACP,MAAM,EAAC,YAAY;YACnB,MAAM,EAAC,MAAM;YACb,QAAQ,EAAC,OAAO;YAChB,KAAK,EAAC,eAAe;YACrB,QAAQ,EAAC,SAAS;SACnB,CAAC;QACJ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACH,CAAC;IA5DY,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kGAAiC;;SAElC,CAAC;+EAKsB,kEAAW;OAJtB,UAAU,CA6DtB;IAAD,iBAAC;CAAA;AA7DsB","file":"pages-prueba-prueba-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PruebaPage } from './prueba.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PruebaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PruebaPage]\n})\nexport class PruebaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>prueba</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-card>\\n<button size=\\\"large\\\" expand=\\\"block\\\" (click)=\\\"getmolina()\\\">Holi</button>\\n</ion-card>\\n<br>\\n<button (click)=\\\"getTask()\\\">holi2</button>\\n<br>\\n<button (click)=\\\"getomar()\\\">holi3</button>\\n<br>\\n<br>\\n<ion-label position=\\\"floating\\\">email</ion-label>\\n<ion-input name=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n<button (click)=\\\"un_user()\\\">final</button>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BydWViYS9wcnVlYmEucGFnZS5zY3NzIn0= */\"","import { TaskService } from '../../services/task.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-prueba',\n  templateUrl: './prueba.page.html',\n  styleUrls: ['./prueba.page.scss'],\n})\nexport class PruebaPage implements OnInit {\n\n  public email_mio=\"nigarciara@unal.edu.co\";\n  constructor(\n  \tprivate taskService: TaskService\n) { }\n \n  ngOnInit() {\n  }\n  getAllTasks() {\n  this.taskService.getAllTasks()\n  .subscribe(todos => {\n    console.log(todos);\n  });\n  }\n\n  getTask() {\n  this.taskService.getTask('1')\n  .subscribe(todo => {\n    console.log(todo);\n  });\n}\n\n\tgetmolina(){\n\t\tthis.taskService.getUs('1').subscribe(todos =>{\n\t\t\tconsole.log(todos);\n\t\t});\n\t}\n\n  un_user(){\n    this.taskService.getuno('nigarciara@unal.edu.co').subscribe(my_con =>{\n      console.log(my_con);\n    });\n  }\n  /*updateTask() {\n  const task = {\n    id: '1',\n    userId: '1',\n    title: 'change title',\n    completed: true\n  };\n  this.taskService.updateTask(task)\n  .subscribe(todo => {\n    console.log(todo);\n  });\n}*/\n\n\n getomar(){\n  const omitar = {\n    id: '4',\n    NFC_id:'aaaaaaaaaa',\n    nombre:'omar',\n    apellido:'lopez',\n    email:'o@unal.edu.co',\n    password:'omar123'\n  };\nthis.taskService.updateTask(omitar).subscribe(abc=>{\n  console.log(abc);\n});\n}\n}\n"],"sourceRoot":""}